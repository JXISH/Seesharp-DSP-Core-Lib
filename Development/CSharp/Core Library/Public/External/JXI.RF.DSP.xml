<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JXI.RF.DSP</name>
    </assembly>
    <members>
        <member name="T:JXI.RF.DSP.Modem.EasyModem">
            <summary>
            信号调制静态类。
            </summary>
        </member>
        <member name="M:JXI.RF.DSP.Modem.EasyModem.GenerateAM(System.Numerics.Complex[],System.Double,System.Double,System.Double,JXI.RF.DSP.Generation.FunctionGenSignalType,System.Double)">
            <summary>
            生成AM调制信号，调制的内容为标准波形（Sine/Triangle/Sawtooth/Square），频率可设。
            </summary>
            <param name="modulatedSignal"></param>
            <param name="sampleRate"></param>
            <param name="depth">调制深度，%。</param>
            <param name="messageFrequency"></param>
            <param name="messageSignalType"></param>
            <param name="snr">信噪比。默认为double.MaxValue，即不添加噪声。</param>
        </member>
        <member name="M:JXI.RF.DSP.Modem.EasyModem.GenerateFM(System.Numerics.Complex[],System.Double,System.Double,System.Double,JXI.RF.DSP.Generation.FunctionGenSignalType,System.Double)">
            <summary>
            生成FM调制信号，调制的内容为标准波形（Sine/Triangle/Sawtooth/Square），频率可设。
            </summary>
            <param name="modulatedSignal"></param>
            <param name="sampleRate"></param>
            <param name="deviation">最大频偏，Hz。</param>
            <param name="messageFrequency"></param>
            <param name="messageSignalType"></param>
            <param name="snr">信噪比。默认为double.MaxValue，即不添加噪声。</param>
        </member>
        <member name="T:JXI.RF.DSP.Modem.AnalogModulator">
            <summary>
            模拟调制基类。
            </summary>
        </member>
        <member name="P:JXI.RF.DSP.Modem.AnalogModulator.MessageSource">
            <summary>
            信源类型。
            </summary>
        </member>
        <member name="P:JXI.RF.DSP.Modem.AnalogModulator.MessageGenerator">
            <summary>
            当信源类型为波形发生器（FunctionGen）时的波形发生器实例。
            </summary>
        </member>
        <member name="P:JXI.RF.DSP.Modem.AnalogModulator.SampleRate">
            <summary>
            采样率。
            </summary>
        </member>
        <member name="P:JXI.RF.DSP.Modem.AnalogModulator.InitialPhase">
            <summary>
            初始相位，in Degree。
            </summary>
        </member>
        <member name="P:JXI.RF.DSP.Modem.AnalogModulator.CNR">
            <summary>
            载噪比，dB。
            </summary>
        </member>
        <member name="F:JXI.RF.DSP.Modem.AnalogModulator._randomGen">
            <summary>
            随机数生成器（噪声）。
            </summary>
        </member>
        <member name="M:JXI.RF.DSP.Modem.AnalogModulator.#ctor">
            <summary>
            构造函数。
            </summary>
        </member>
        <member name="M:JXI.RF.DSP.Modem.AnalogModulator.Reset">
            <summary>
            重置调制器，清除历史数据。
            </summary>
        </member>
        <member name="M:JXI.RF.DSP.Modem.AnalogModulator.Modulate(System.Double[],System.Numerics.Complex[])">
            <summary>
            当信源类型为waveform时，对输入的信号进行调制。
            </summary>
            <param name="message"></param>
            <param name="modulatedSignal"></param>
        </member>
        <member name="M:JXI.RF.DSP.Modem.AnalogModulator.Generate(System.Numerics.Complex[])">
            <summary>
            当信源类型为波形发生器（FunctionGen）时，获取调制后的信号。
            </summary>
            <param name="modulatedSignal"></param>
        </member>
        <member name="M:JXI.RF.DSP.Modem.AnalogModulator.CalcMinSampleRate(System.Double)">
            <summary>
            根据当前设置的调制参数，计算给定信源最高频率所需的最低采样率。
            </summary>
            <param name="messageFrequency"></param>
            <returns></returns>
        </member>
        <member name="T:JXI.RF.DSP.Modem.AmplitudeModulator">
            <summary>
            幅度调制（AM）类。
            </summary>
        </member>
        <member name="P:JXI.RF.DSP.Modem.AmplitudeModulator.Depth">
            <summary>
            调制深度，%。
            </summary>
        </member>
        <member name="M:JXI.RF.DSP.Modem.AmplitudeModulator.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:JXI.RF.DSP.Modem.AmplitudeModulator.Generate(System.Numerics.Complex[])">
            <summary>
            当信源类型为波形发生器（FunctionGen）时，获取调制后的信号。
            </summary>
            <param name="modulatedSignal"></param>
        </member>
        <member name="M:JXI.RF.DSP.Modem.AmplitudeModulator.Modulate(System.Double[],System.Numerics.Complex[])">
            <summary>
            当信源类型为waveform时，对输入的信号进行调制。
            </summary>
            <param name="message"></param>
            <param name="modulatedSignal"></param>
        </member>
        <member name="M:JXI.RF.DSP.Modem.AmplitudeModulator.CalcMinSampleRate(System.Double)">
            <summary>
            根据当前设置的调制参数，计算给定信源最高频率所需的最低采样率。
            </summary>
            <param name="messageFrequency"></param>
            <returns></returns>
        </member>
        <member name="T:JXI.RF.DSP.Modem.FrequencyModulator">
            <summary>
            频率调制（FM）类。
            </summary>
        </member>
        <member name="F:JXI.RF.DSP.Modem.FrequencyModulator._phaseOfNextBlock">
            <summary>
            下一次获取数据时的起始相位，角度梯度, 即[0,1)区间。
            也可以理解为周期为1的信号的起始时间。
            </summary>
        </member>
        <member name="P:JXI.RF.DSP.Modem.FrequencyModulator.Deviation">
            <summary>
            调频最大频偏，Hz。
            </summary>
        </member>
        <member name="M:JXI.RF.DSP.Modem.FrequencyModulator.#ctor">
            <summary>
            构造函数，并初始化参数
            </summary>
        </member>
        <member name="M:JXI.RF.DSP.Modem.FrequencyModulator.Reset">
            <summary>
            重置调制器，清除历史数据。
            </summary>
        </member>
        <member name="M:JXI.RF.DSP.Modem.FrequencyModulator.Generate(System.Numerics.Complex[])">
            <summary>
            当信源类型为波形发生器（FunctionGen）时，获取调制后的信号。
            </summary>
            <param name="modulatedSignal"></param>
        </member>
        <member name="M:JXI.RF.DSP.Modem.FrequencyModulator.Modulate(System.Double[],System.Numerics.Complex[])">
            <summary>
            当信源类型为waveform时，对输入的信号进行调制。
            </summary>
            <param name="message"></param>
            <param name="modulatedSignal"></param>
        </member>
        <member name="M:JXI.RF.DSP.Modem.FrequencyModulator.CalcMinSampleRate(System.Double)">
            <summary>
            根据当前设置的调制参数，计算给定信源最高频率所需的最低采样率。
            </summary>
            <param name="messageFrequency"></param>
            <returns></returns>
        </member>
        <member name="T:JXI.RF.DSP.Modem.MessageSourceType">
            <summary>
            模拟调制的信源类型。
            </summary>
        </member>
        <member name="T:JXI.RF.DSP.Modem.StandardSignalType">
            <summary>
            标准信号类型。
            </summary>
        </member>
        <member name="T:JXI.RF.DSP.Modem.StandardSignalGenParam">
            <summary>
            标准信号的参数。
            </summary>
        </member>
        <member name="P:JXI.RF.DSP.Modem.StandardSignalGenParam.Type">
            <summary>
            信号类型。
            </summary>
        </member>
        <member name="P:JXI.RF.DSP.Modem.StandardSignalGenParam.AnalogModulation">
            <summary>
            模拟调制参数，当信号类型为AM/FM/PM时设置。
            </summary>
        </member>
        <member name="M:JXI.RF.DSP.Modem.StandardSignalGenParam.#ctor">
            <summary>
            构造函数。
            </summary>
        </member>
        <member name="M:JXI.RF.DSP.Modem.StandardSignalGenParam.CopyFrom(JXI.RF.DSP.Modem.StandardSignalGenParam)">
            <summary>
            复制对象内容。
            </summary>
            <param name="source"></param>
        </member>
        <member name="T:JXI.RF.DSP.Modem.AnalogModulationParam">
            <summary>
            模拟调制（AM/FM/PM）的调制参数。
            </summary>
        </member>
        <member name="P:JXI.RF.DSP.Modem.AnalogModulationParam.Message">
            <summary>
            信源参数。
            </summary>
        </member>
        <member name="P:JXI.RF.DSP.Modem.AnalogModulationParam.AM">
            <summary>
            AM（调幅）的调制参数。
            </summary>
        </member>
        <member name="P:JXI.RF.DSP.Modem.AnalogModulationParam.FM">
            <summary>
            FM（调频）的调制参数。
            </summary>
        </member>
        <member name="M:JXI.RF.DSP.Modem.AnalogModulationParam.#ctor">
            <summary>
            构造函数。
            </summary>
        </member>
        <member name="M:JXI.RF.DSP.Modem.AnalogModulationParam.CopyFrom(JXI.RF.DSP.Modem.AnalogModulationParam)">
            <summary>
            复制对象内容。
            </summary>
            <param name="source"></param>
        </member>
        <member name="T:JXI.RF.DSP.Modem.AnalogModMessageParam">
            <summary>
            模拟调制的信源参数。
            </summary>
        </member>
        <member name="E:JXI.RF.DSP.Modem.AnalogModMessageParam.ParamChanged">
            <summary>
            参数值改变时触发的事件。
            </summary>
        </member>
        <member name="P:JXI.RF.DSP.Modem.AnalogModMessageParam.Type">
            <summary>
            波形类型。
            </summary>
        </member>
        <member name="P:JXI.RF.DSP.Modem.AnalogModMessageParam.Frequency">
            <summary>
            波形频率。
            </summary>
        </member>
        <member name="M:JXI.RF.DSP.Modem.AnalogModMessageParam.CopyFrom(JXI.RF.DSP.Modem.AnalogModMessageParam)">
            <summary>
            复制对象内容。
            </summary>
            <param name="source"></param>
        </member>
        <member name="T:JXI.RF.DSP.Modem.AmplitudeModulationParam">
            <summary>
            AM（调幅）的调制参数。
            </summary>
        </member>
        <member name="E:JXI.RF.DSP.Modem.AmplitudeModulationParam.ParamChanged">
            <summary>
            参数值改变时触发的事件。
            </summary>
        </member>
        <member name="P:JXI.RF.DSP.Modem.AmplitudeModulationParam.Depth">
            <summary>
            调制深度，%。
            </summary>
        </member>
        <member name="M:JXI.RF.DSP.Modem.AmplitudeModulationParam.CopyFrom(JXI.RF.DSP.Modem.AmplitudeModulationParam)">
            <summary>
            复制对象内容。
            </summary>
            <param name="source"></param>
        </member>
        <member name="T:JXI.RF.DSP.Modem.FrequencyModulationParam">
            <summary>
            FM（调频）的调制参数。
            </summary>
        </member>
        <member name="E:JXI.RF.DSP.Modem.FrequencyModulationParam.ParamChanged">
            <summary>
            参数值改变时触发的事件。
            </summary>
        </member>
        <member name="P:JXI.RF.DSP.Modem.FrequencyModulationParam.Deviation">
            <summary>
            调频最大频偏，Hz。
            </summary>
        </member>
        <member name="M:JXI.RF.DSP.Modem.FrequencyModulationParam.CopyFrom(JXI.RF.DSP.Modem.FrequencyModulationParam)">
            <summary>
            复制对象内容。
            </summary>
            <param name="source"></param>
        </member>
        <member name="T:JXI.RF.DSP.Modem.DigitalModMessageParam">
            <summary>
            数字调制的信源参数。
            </summary>
        </member>
        <member name="E:JXI.RF.DSP.Modem.DigitalModMessageParam.ParamChanged">
            <summary>
            参数值改变时触发的事件。
            </summary>
        </member>
        <member name="P:JXI.RF.DSP.Modem.DigitalModMessageParam.Type">
            <summary>
            信源类型。
            </summary>
        </member>
        <member name="P:JXI.RF.DSP.Modem.DigitalModMessageParam.PrbsOrder">
            <summary>
            当信源类型为PRBS时，PRBS的阶数。
            </summary>
        </member>
        <member name="P:JXI.RF.DSP.Modem.DigitalModMessageParam.PrbsSeed">
            <summary>
            当信源类型为PRBS时，PRBS生成所用的Seed。
            </summary>
        </member>
        <member name="P:JXI.RF.DSP.Modem.DigitalModMessageParam.BitSequence">
            <summary>
            当信源类型为UserDefinedBitSequence时的信源码流。
            </summary>
        </member>
        <member name="M:JXI.RF.DSP.Modem.DigitalModMessageParam.SetBitSequency(System.Byte[])">
            <summary>
            设置信源码流，当信源类型为UserDefinedBitSequence时调用此方法。
            </summary>
            <param name="bitSequence"></param>
        </member>
        <member name="M:JXI.RF.DSP.Modem.DigitalModMessageParam.CopyFrom(JXI.RF.DSP.Modem.DigitalModMessageParam)">
            <summary>
            复制对象内容。
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:JXI.RF.DSP.Modem.DigitalModMessageParam.#ctor">
            <summary>
            构造函数。
            </summary>
        </member>
        <member name="T:JXI.RF.DSP.Modem.DigitalModMessageType">
            <summary>
            数字调制的信源（码流）类型。
            </summary>
        </member>
        <member name="F:JXI.RF.DSP.Modem.DigitalModMessageType.PRBS">
            <summary>
            伪随机序列（Pseudo-Random Binary Sequence）。
            </summary>
        </member>
        <member name="F:JXI.RF.DSP.Modem.DigitalModMessageType.UserDefinedBitSequence">
            <summary>
            用户自定义的一个序列（码流）。
            </summary>
        </member>
        <member name="T:JXI.RF.DSP.Modem.PulseModulationParam">
            <summary>
            Pulse（脉冲调制）的调制参数。
            </summary>
        </member>
        <member name="E:JXI.RF.DSP.Modem.PulseModulationParam.ParamChanged">
            <summary>
            参数值改变时触发的事件。
            </summary>
        </member>
        <member name="P:JXI.RF.DSP.Modem.PulseModulationParam.Period">
            <summary>
            脉冲信号的周期，以秒（second）为单位。
            </summary>
        </member>
        <member name="P:JXI.RF.DSP.Modem.PulseModulationParam.Width">
            <summary>
            脉冲信号的脉宽，即高电平的持续时间（不能大于脉冲信号的周期），以秒（second）为单位。
            </summary>
        </member>
        <member name="M:JXI.RF.DSP.Modem.PulseModulationParam.CopyFrom(JXI.RF.DSP.Modem.PulseModulationParam)">
            <summary>
            复制对象内容。
            </summary>
            <param name="source"></param>
        </member>
        <member name="T:JXI.RF.DSP.Generation.EasyGeneration">
            <summary>
            波形生成静态类。
            </summary>
        </member>
        <member name="M:JXI.RF.DSP.Generation.EasyGeneration.ComplexSine(System.Numerics.Complex[],System.Double,System.Double,System.Double,System.Double)">
            <summary>
            生成单一复数正弦波。
            </summary>
            <param name="x"></param>
            <param name="frequency"></param>
            <param name="sampleRate"></param>
            <param name="signalAmplitude"></param>
            <param name="snr"></param>
        </member>
        <member name="M:JXI.RF.DSP.Generation.EasyGeneration.ComplexSine(System.Int16[],System.Double,System.Double,System.Double,System.Double)">
            <summary>
            生成I/Q交错（Interleave）格式的单一复数正弦波。
            </summary>
            <param name="x"></param>
            <param name="frequency"></param>
            <param name="sampleRate"></param>
            <param name="signalAmplitude"></param>
            <param name="snr"></param>
        </member>
        <member name="M:JXI.RF.DSP.Generation.EasyGeneration.Sine(System.Int16[],System.Double,System.Double,System.Double,System.Double)">
            <summary>
            生成单一正弦波。
            </summary>
            <param name="x"></param>
            <param name="frequency"></param>
            <param name="sampleRate"></param>
            <param name="signalAmplitude"></param>
            <param name="snr"></param>
        </member>
        <member name="M:JXI.RF.DSP.Generation.EasyGeneration.CalcCycleQuantum(System.Double,System.Double,System.Int32,System.Double@,System.Double,System.Int32)">
            <summary>
            对于给定的信号频率和采样率，计算整周期波形的点数。
            </summary>
            <param name="signalFrequency">期望信号频率</param>
            <param name="sampleRate">采样率</param>
            <param name="maxLength">最大长度</param>
            <param name="actualFrequency">实际频率</param>
            <param name="tolerance">容差</param>
            <param name="minLength">最小长度</param>
            <returns>最少周期点数</returns>
        </member>
        <member name="T:JXI.RF.DSP.Generation.FunctionGenerator">
            <summary>
            基础波形生成基类。
            </summary>
        </member>
        <member name="F:JXI.RF.DSP.Generation.FunctionGenerator._rawDoubleData">
            <summary>
            临时数组，当获取的数据类型不为double[]时，先按照double[]生成并保存在临时此临时数组，再统一做数据类型转换。
            </summary>
        </member>
        <member name="F:JXI.RF.DSP.Generation.FunctionGenerator._phaseOfNextBlock">
            <summary>
            下一次获取数据时的起始相位，角度梯度, 即[0,1)区间。
            也可以理解为周期为1的信号的起始时间。
            </summary>
        </member>
        <member name="F:JXI.RF.DSP.Generation.FunctionGenerator._randomGen">
            <summary>
            随机数生成器（噪声）。
            </summary>
        </member>
        <member name="P:JXI.RF.DSP.Generation.FunctionGenerator.SampleRate">
            <summary>
            采样率。
            </summary>
        </member>
        <member name="P:JXI.RF.DSP.Generation.FunctionGenerator.Frequency">
            <summary>
            频率。
            </summary>
        </member>
        <member name="P:JXI.RF.DSP.Generation.FunctionGenerator.Amplitude">
            <summary>
            幅度。
            </summary>
        </member>
        <member name="P:JXI.RF.DSP.Generation.FunctionGenerator.InitialPhase">
            <summary>
            初始相位，in Degree。
            </summary>
        </member>
        <member name="P:JXI.RF.DSP.Generation.FunctionGenerator.NoiseType">
            <summary>
            噪声类型。
            </summary>
        </member>
        <member name="P:JXI.RF.DSP.Generation.FunctionGenerator.SNR">
            <summary>
            信噪比，dB。
            </summary>
        </member>
        <member name="M:JXI.RF.DSP.Generation.FunctionGenerator.#ctor">
            <summary>
            构造函数。
            </summary>
        </member>
        <member name="M:JXI.RF.DSP.Generation.FunctionGenerator.#ctor(System.Double,System.Double,System.Double,System.Double,JXI.RF.DSP.Generation.NoiseType,System.Double)">
            <summary>
            构造函数。
            </summary>
            <param name="sampleRate"></param>
            <param name="frequency"></param>
            <param name="amplitude"></param>
            <param name="initialPhase"></param>
            <param name="noiseType"></param>
            <param name="snr"></param>
        </member>
        <member name="M:JXI.RF.DSP.Generation.FunctionGenerator.Reset">
            <summary>
            重置，清空历史数据。
            </summary>
        </member>
        <member name="M:JXI.RF.DSP.Generation.FunctionGenerator.Generate(System.Double[])">
            <summary>
            生成信号，double格式。
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:JXI.RF.DSP.Generation.FunctionGenerator.Generate(System.Int16[])">
            <summary>
            生成信号，short格式。
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:JXI.RF.DSP.Generation.FunctionGenerator.AddNoise(System.Double[])">
            <summary>
            添加噪声
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:JXI.RF.DSP.Generation.FunctionGenerator.GenerateScaledPhase(System.Double,System.Double,System.Double)">
            <summary>
            获取归一化的相位，当相位不在[0，1)区间时，回归到该区间。
            </summary>
            <param name="time">待求相位的时刻</param>
            <param name="scale">相位归一化因子</param>
            <param name="offset">初始相位</param>
            <returns></returns>
        </member>
        <member name="M:JXI.RF.DSP.Generation.FunctionGenerator.CalcCycleQuantum(System.Double[],System.Double,System.Int32,System.Double[]@,System.Double,System.Int32,System.Int32)">
            <summary>
            对于给定的信号频率和采样率，计算整周期波形的点数。
            </summary>
            <param name="signalFrequency">期望信号频率</param>
            <param name="sampleRate">采样率</param>
            <param name="maxLength">最大长度</param>
            <param name="actualFrequency">实际频率</param>
            <param name="tolerance">容差</param>
            <param name="minLength">最小长度</param>
            <param name="quantumSize">量化步进</param>
            <returns>最少周期点数</returns>
        </member>
        <member name="T:JXI.RF.DSP.Generation.SineGenerator">
            <summary>
            单正弦波生成。
            </summary>
        </member>
        <member name="M:JXI.RF.DSP.Generation.SineGenerator.#ctor">
            <summary>
            构造函数。
            </summary>
        </member>
        <member name="M:JXI.RF.DSP.Generation.SineGenerator.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            构造函数。
            </summary>
            <param name="sampleRate"></param>
            <param name="frequency"></param>
            <param name="amplitude"></param>
            <param name="initialPhase">初始相位，in Degree。</param>
        </member>
        <member name="M:JXI.RF.DSP.Generation.SineGenerator.#ctor(System.Double,System.Double,System.Double,System.Double,JXI.RF.DSP.Generation.NoiseType,System.Double)">
            <summary>
            构造函数。
            </summary>
            <param name="sampleRate"></param>
            <param name="frequency"></param>
            <param name="amplitude"></param>
            <param name="initialPhase">初始相位，in Degree。</param>
            <param name="noiseType"></param>
            <param name="snr"></param>
        </member>
        <member name="M:JXI.RF.DSP.Generation.SineGenerator.Reset">
            <summary>
            重置下一次生成数据的初始相位为公共属性InitialPhase的值。
            </summary>
        </member>
        <member name="M:JXI.RF.DSP.Generation.SineGenerator.Generate(System.Double[])">
            <summary>
            生成数据。
            </summary>
            <param name="data"></param>
        </member>
        <member name="T:JXI.RF.DSP.Generation.TriangleGenrator">
            <summary>
            三角波生成
            </summary>
        </member>
        <member name="M:JXI.RF.DSP.Generation.TriangleGenrator.#ctor">
            <summary>
            构造函数。
            </summary>
        </member>
        <member name="M:JXI.RF.DSP.Generation.TriangleGenrator.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            构造函数。
            </summary>
            <param name="sampleRate"></param>
            <param name="frequency"></param>
            <param name="amplitude"></param>
            <param name="initialPhase">初始相位，in Degree。</param>
        </member>
        <member name="M:JXI.RF.DSP.Generation.TriangleGenrator.#ctor(System.Double,System.Double,System.Double,System.Double,JXI.RF.DSP.Generation.NoiseType,System.Double)">
            <summary>
            构造函数。
            </summary>
            <param name="sampleRate"></param>
            <param name="frequency"></param>
            <param name="amplitude"></param>
            <param name="initialPhase">初始相位，in Degree。</param>
            <param name="noiseType"></param>
            <param name="snr"></param>
        </member>
        <member name="M:JXI.RF.DSP.Generation.TriangleGenrator.Reset">
            <summary>
            重置下一次生成数据的初始相位为公共属性InitialPhase的值。
            </summary>
        </member>
        <member name="M:JXI.RF.DSP.Generation.TriangleGenrator.Generate(System.Double[])">
            <summary>
            生成数据。
            </summary>
            <param name="data"></param>
        </member>
        <member name="T:JXI.RF.DSP.Generation.SawtoothGenrator">
            <summary>
            锯齿波生成
            </summary>
        </member>
        <member name="M:JXI.RF.DSP.Generation.SawtoothGenrator.#ctor">
            <summary>
            构造函数。
            </summary>
        </member>
        <member name="M:JXI.RF.DSP.Generation.SawtoothGenrator.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            构造函数。
            </summary>
            <param name="sampleRate"></param>
            <param name="frequency"></param>
            <param name="amplitude"></param>
            <param name="initialPhase">初始相位，in Degree。</param>
        </member>
        <member name="M:JXI.RF.DSP.Generation.SawtoothGenrator.#ctor(System.Double,System.Double,System.Double,System.Double,JXI.RF.DSP.Generation.NoiseType,System.Double)">
            <summary>
            构造函数。
            </summary>
            <param name="sampleRate"></param>
            <param name="frequency"></param>
            <param name="amplitude"></param>
            <param name="initialPhase">初始相位，in Degree。</param>
            <param name="noiseType"></param>
            <param name="snr"></param>
        </member>
        <member name="M:JXI.RF.DSP.Generation.SawtoothGenrator.Reset">
            <summary>
            重置下一次生成数据的初始相位为公共属性InitialPhase的值。
            </summary>
        </member>
        <member name="M:JXI.RF.DSP.Generation.SawtoothGenrator.Generate(System.Double[])">
            <summary>
            生成数据。
            </summary>
            <param name="data"></param>
        </member>
        <member name="T:JXI.RF.DSP.Generation.SquareGenrator">
            <summary>
            方波生成
            </summary>
        </member>
        <member name="P:JXI.RF.DSP.Generation.SquareGenrator.DutyCycle">
            <summary>
            占空比，%。
            </summary>
        </member>
        <member name="M:JXI.RF.DSP.Generation.SquareGenrator.#ctor">
            <summary>
            构造函数。
            </summary>
        </member>
        <member name="M:JXI.RF.DSP.Generation.SquareGenrator.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            构造函数。
            </summary>
            <param name="sampleRate"></param>
            <param name="frequency"></param>
            <param name="amplitude"></param>
            <param name="dutyCycle"></param>
            <param name="initialPhase">初始相位，in Degree。</param>
        </member>
        <member name="M:JXI.RF.DSP.Generation.SquareGenrator.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,JXI.RF.DSP.Generation.NoiseType,System.Double)">
            <summary>
            构造函数。
            </summary>
            <param name="sampleRate"></param>
            <param name="frequency"></param>
            <param name="amplitude"></param>
            <param name="dutyCycle"></param>
            <param name="initialPhase">初始相位，in Degree。</param>
            <param name="noiseType"></param>
            <param name="snr"></param>
        </member>
        <member name="M:JXI.RF.DSP.Generation.SquareGenrator.Reset">
            <summary>
            重置下一次生成数据的初始相位为公共属性InitialPhase的值。
            </summary>
        </member>
        <member name="M:JXI.RF.DSP.Generation.SquareGenrator.Generate(System.Double[])">
            <summary>
            生成数据。
            </summary>
            <param name="data"></param>
        </member>
        <member name="T:JXI.RF.DSP.Generation.ComplexFunctionGenerator">
            <summary>
            基础复数波形生成基类。
            </summary>
        </member>
        <member name="M:JXI.RF.DSP.Generation.ComplexFunctionGenerator.#ctor">
            <summary>
            构造函数。
            </summary>
        </member>
        <member name="M:JXI.RF.DSP.Generation.ComplexFunctionGenerator.#ctor(System.Double,System.Double,System.Double,System.Double,JXI.RF.DSP.Generation.NoiseType,System.Double)">
            <summary>
            构造函数。
            </summary>
        </member>
        <member name="M:JXI.RF.DSP.Generation.ComplexFunctionGenerator.Generate(System.Numerics.Complex[])">
            <summary>
            生成信号，Complex格式。
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:JXI.RF.DSP.Generation.ComplexFunctionGenerator.AddNoise(System.Numerics.Complex[])">
            <summary>
            添加噪声
            </summary>
            <param name="data"></param>
        </member>
        <member name="T:JXI.RF.DSP.Generation.ComplexSineGenerator">
            <summary>
            复数单正弦波生成。
            </summary>
        </member>
        <member name="F:JXI.RF.DSP.Generation.ComplexSineGenerator._rawComplexData">
            <summary>
            临时数组，当获取的数据类型不为Complex[]时，先按照Complex[]生成并保存在临时此临时数组，再统一做数据类型转换。
            </summary>
        </member>
        <member name="M:JXI.RF.DSP.Generation.ComplexSineGenerator.#ctor">
            <summary>
            构造函数。
            </summary>
        </member>
        <member name="M:JXI.RF.DSP.Generation.ComplexSineGenerator.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            构造函数。
            </summary>
            <param name="sampleRate"></param>
            <param name="frequency"></param>
            <param name="amplitude"></param>
            <param name="initialPhase">初始相位，in Degree。</param>
        </member>
        <member name="M:JXI.RF.DSP.Generation.ComplexSineGenerator.#ctor(System.Double,System.Double,System.Double,System.Double,JXI.RF.DSP.Generation.NoiseType,System.Double)">
            <summary>
            构造函数。
            </summary>
            <param name="sampleRate"></param>
            <param name="frequency"></param>
            <param name="amplitude"></param>
            <param name="initialPhase">初始相位，in Degree。</param>
            <param name="noiseType"></param>
            <param name="snr"></param>
        </member>
        <member name="M:JXI.RF.DSP.Generation.ComplexSineGenerator.Reset">
            <summary>
            重置下一次生成数据的初始相位为公共属性InitialPhase的值。
            </summary>
        </member>
        <member name="M:JXI.RF.DSP.Generation.ComplexSineGenerator.Generate(System.Numerics.Complex[])">
            <summary>
            生成信号，Complex格式。
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:JXI.RF.DSP.Generation.ComplexSineGenerator.Generate(System.Int16[])">
            <summary>
            生成信号，I16 Interleaved IQ格式。
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:JXI.RF.DSP.Generation.ComplexSineGenerator.Generate(System.Double[])">
            <summary>
            生成信号，double Interleaved IQ格式。
            </summary>
            <param name="data"></param>
        </member>
        <member name="T:JXI.RF.DSP.Generation.NoiseType">
            <summary>
            噪声类型。
            </summary>
        </member>
        <member name="T:JXI.RF.DSP.Generation.FunctionGenSignalType">
            <summary>
            基础波形信号类型。
            </summary>
        </member>
        <member name="F:JXI.RF.DSP.Generation.FunctionGenSignalType.Sine">
            <summary>
            正弦波。
            </summary>
        </member>
        <member name="F:JXI.RF.DSP.Generation.FunctionGenSignalType.Triangle">
            <summary>
            三角波。
            </summary>
        </member>
        <member name="F:JXI.RF.DSP.Generation.FunctionGenSignalType.Sawtooth">
            <summary>
            锯齿波。
            </summary>
        </member>
        <member name="F:JXI.RF.DSP.Generation.FunctionGenSignalType.Square">
            <summary>
            方波。
            </summary>
        </member>
        <member name="T:JXI.RF.DSP.Mathematics.StatisticalNumericScalar">
            <summary>
            包含历史数据和统计值的单一数值。
            </summary>
        </member>
        <member name="P:JXI.RF.DSP.Mathematics.StatisticalNumericScalar.Value">
            <summary>
            当前数值。
            </summary>
        </member>
        <member name="P:JXI.RF.DSP.Mathematics.StatisticalNumericScalar.Count">
            <summary>
            已更新的测量值次数。
            </summary>
        </member>
        <member name="P:JXI.RF.DSP.Mathematics.StatisticalNumericScalar.HistoryLength">
            <summary>
            历史数据长度。
            </summary>
        </member>
        <member name="P:JXI.RF.DSP.Mathematics.StatisticalNumericScalar.HistoryValues">
            <summary>
            历史数据列表。
            </summary>
        </member>
        <member name="P:JXI.RF.DSP.Mathematics.StatisticalNumericScalar.MaxValue">
            <summary>
            自实例化或Reset()以来的最大值，注：并非滑动的历史数据最大值。
            </summary>
        </member>
        <member name="P:JXI.RF.DSP.Mathematics.StatisticalNumericScalar.MinValue">
            <summary>
            自实例化或Reset()以来的最小值，注：并非滑动的历史数据最小值。
            </summary>
        </member>
        <member name="P:JXI.RF.DSP.Mathematics.StatisticalNumericScalar.MeanValue">
            <summary>
            历史数据的平均值（滑动）。
            </summary>
        </member>
        <member name="P:JXI.RF.DSP.Mathematics.StatisticalNumericScalar.MedianValue">
            <summary>
            历史数据的中值（滑动）。
            </summary>
        </member>
        <member name="M:JXI.RF.DSP.Mathematics.StatisticalNumericScalar.#ctor">
            <summary>
            构造函数。
            </summary>
        </member>
        <member name="M:JXI.RF.DSP.Mathematics.StatisticalNumericScalar.#ctor(System.Int32)">
            <summary>
            构造函数。
            </summary>
        </member>
        <member name="M:JXI.RF.DSP.Mathematics.StatisticalNumericScalar.Enqueue(System.Double)">
            <summary>
            将新的数值添加到历史队列中，若队列已满，则移除最早的数据点。
            </summary>
            <param name="newValue"></param>
        </member>
        <member name="M:JXI.RF.DSP.Mathematics.StatisticalNumericScalar.CopyFrom(JXI.RF.DSP.Mathematics.StatisticalNumericScalar)">
            <summary>
            复制对象的数据（深复制）。
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:JXI.RF.DSP.Mathematics.StatisticalNumericScalar.Reset">
            <summary>
            清空历史数据。
            </summary>
        </member>
        <member name="T:JXI.RF.DSP.Mathematics.Const">
            <summary>
            常量
            </summary>
        </member>
        <member name="F:JXI.RF.DSP.Mathematics.Const.I32PhaseScale">
            <summary>
            相位因子，将0-2pi 投影到I32范围中，满足相位自动回绕
            </summary>
        </member>
        <member name="F:JXI.RF.DSP.Mathematics.Const.I16PhaseScale">
            <summary>
            相位因子，将0-2pi 投影到 -32768 -- +32767 范围中，满足相位自动回绕
            </summary>
        </member>
        <member name="T:JXI.RF.DSP.Mathematics.NoiseGenerator">
            <summary>
            噪声生成器
            </summary>
        </member>
        <member name="M:JXI.RF.DSP.Mathematics.NoiseGenerator.GetRandomSeed(System.Int32)">
            <summary>
            产设种子，seed =-1 随机生成种子；seed != -1 返回seed
            </summary>
            <param name="seed">种子</param>
            <returns></returns>
        </member>
        <member name="M:JXI.RF.DSP.Mathematics.NoiseGenerator.GaussNiose(System.Double[],System.Double,System.Double,System.Int32)">
            <summary>
            用box muller的方法产生高斯噪声
            https://en.wikipedia.org/wiki/Box-Muller_transform
            </summary>
            <param name="gaussNoise">输出噪声数组</param>
            <param name="sigma">方差</param>
            <param name="mean">均值</param>
            <param name="seed">种子</param>
        </member>
        <member name="M:JXI.RF.DSP.Mathematics.NoiseGenerator.WhiteNoise(System.Double[],System.Double,System.Double,System.Int32)">
            <summary>
            产生白噪声
            </summary>
            <param name="whiteNoise">输出噪声数组</param>
            <param name="amplitude">幅度</param>
            <param name="mean">均值</param>
            <param name="seed">种子</param>
        </member>
        <member name="T:JXI.RF.DSP.Numerics.NumericsUtility">
            <summary>
            数值类型处理库。
            </summary>
        </member>
        <member name="M:JXI.RF.DSP.Numerics.NumericsUtility.ConvertComplexIQ(System.Int16[],System.Double,System.Numerics.Complex[])">
            <summary>
            将short(I16) interleaved IQ转换为Complex IQ。
            </summary>
            <param name="source">I/Q交替（Interleaved）存放的IQ。</param>
            <param name="scale">转换为Complex时的线性因子，非dB。</param>
            <param name="destination"></param>
        </member>
        <member name="M:JXI.RF.DSP.Numerics.NumericsUtility.ConvertComplexIQ(System.Numerics.Complex[],System.Double,System.Int16[])">
            <summary>
            将Complex IQ转换为short(I16) interleaved IQ。
            </summary>
            <param name="source"></param>
            <param name="scale"></param>
            <param name="destination"></param>
        </member>
        <member name="T:JXI.RF.DSP.Spectrum.EasySpectrum">
            <summary>
            频谱计算静态类。
            </summary>
        </member>
        <member name="M:JXI.RF.DSP.Spectrum.EasySpectrum.AutoPowerSpectrum(System.Numerics.Complex[],System.Double,System.Double,System.Double[],System.Double@,SeeSharpTools.JXI.DSP.Spectrum.SpectrumAverageMode,System.Int32,SeeSharpTools.JXI.DSP.Spectrum.SpectrumOutputUnit)">
            <summary>
            自动功率谱，含带内功率测量。
            </summary>
            <param name="data"></param>
            <param name="sampleRate"></param>
            <param name="bandwidth"></param>
            <param name="spectrum"></param>
            <param name="powerInBand"></param>
            <param name="averageMode"></param>
            <param name="averageSize"></param>
            <param name="unit"></param>
        </member>
        <member name="M:JXI.RF.DSP.Spectrum.EasySpectrum.AutoPowerSpectrum(System.Numerics.Complex[],System.Double,System.Double,System.Double[],SeeSharpTools.JXI.DSP.Spectrum.SpectrumAverageMode,System.Int32,SeeSharpTools.JXI.DSP.Spectrum.SpectrumOutputUnit)">
            <summary>
            自动功率谱，不含带内功率测量。
            </summary>
            <param name="data"></param>
            <param name="sampleRate"></param>
            <param name="bandwidth"></param>
            <param name="spectrum"></param>
            <param name="averageMode"></param>
            <param name="averageSize"></param>
            <param name="unit"></param>
        </member>
        <member name="T:JXI.RF.DSP.Spectrum.EasyComplexSpectrum">
            <summary>
            频谱计算类。
            </summary>
        </member>
        <member name="F:JXI.RF.DSP.Spectrum.EasyComplexSpectrum.RbwFactorOf7TermBHWindow">
            <summary>
            Use 2.5 for easy calculation, mathematical value should be 2.4841000 from LabVIEW "ma_SML Window Parameter.vi".
            </summary>
        </member>
        <member name="F:JXI.RF.DSP.Spectrum.EasyComplexSpectrum.EnbwFactorOf7TermBHWindow">
            <summary>
            ENBW因子，即合并谱线时功率的修正系数。 留作参考，暂不使用。
            ENBW of 7 Term B-Harris window, copied from "ma_SML Window Parameters.vi", inside "SMT Power In Band.vi"。
            </summary>
        </member>
        <member name="M:JXI.RF.DSP.Spectrum.EasyComplexSpectrum.#ctor">
            <summary>
            构造函数。
            </summary>
        </member>
        <member name="P:JXI.RF.DSP.Spectrum.EasyComplexSpectrum.SampleRate">
            <summary>
            IQ采样率，以S/s为单位
            IQ acquisition sample rate, in S/s.
            </summary>
        </member>
        <member name="P:JXI.RF.DSP.Spectrum.EasyComplexSpectrum.Bandwidth">
            <summary>
            频谱带宽，Hz。
            </summary>
        </member>
        <member name="P:JXI.RF.DSP.Spectrum.EasyComplexSpectrum.ResolutionBandwidth">
            <summary>
            频谱的分辨率带宽（RBW）。
            Resolution bandwidth of spectrum.
            </summary>
        </member>
        <member name="P:JXI.RF.DSP.Spectrum.EasyComplexSpectrum.VideoBandwidth">
            <summary>
            频谱的视频带宽（VBW）。
            Video bandwidth of spectrum.
            </summary>
        </member>
        <member name="P:JXI.RF.DSP.Spectrum.EasyComplexSpectrum.AverageMode">
            <summary>
            频谱平均方式。
            </summary>
        </member>
        <member name="P:JXI.RF.DSP.Spectrum.EasyComplexSpectrum.AverageSize">
            <summary>
            频谱平均次数，当平均方式为RmsAverage时有效。
            </summary>
        </member>
        <member name="P:JXI.RF.DSP.Spectrum.EasyComplexSpectrum.SpectralLineType">
            <summary>
            设定输出频谱线数的方式：指定RBW，或者指定频谱线数。
            </summary>
        </member>
        <member name="P:JXI.RF.DSP.Spectrum.EasyComplexSpectrum.NumberOfSpectralLines">
            <summary>
            实际频谱线数。
            </summary>
        </member>
        <member name="P:JXI.RF.DSP.Spectrum.EasyComplexSpectrum.NumberOfRequiredIQSamples">
            <summary>
            每次计算频谱所需要的IQ数据点数。
            </summary>
        </member>
        <member name="P:JXI.RF.DSP.Spectrum.EasyComplexSpectrum.SpectralInformation">
            <summary>
            频谱的数据信息。
            </summary>
        </member>
        <member name="M:JXI.RF.DSP.Spectrum.EasyComplexSpectrum.GetPowerSpectrum(System.Numerics.Complex[],System.Double[],System.Double@)">
            <summary>
            计算频谱，并计算带内功率。
            </summary>
            <param name="data"></param>
            <param name="spectrum"></param>
            <param name="powerInBand"></param>
        </member>
        <member name="M:JXI.RF.DSP.Spectrum.EasyComplexSpectrum.GetPowerSpectrum(System.Numerics.Complex[],System.Double[])">
            <summary>
            计算频谱。
            </summary>
            <param name="data"></param>
            <param name="spectrum"></param>
        </member>
        <member name="M:JXI.RF.DSP.Spectrum.EasyComplexSpectrum.GetPowerSpectrum(System.Numerics.Complex[],System.Single[],System.Double@)">
            <summary>
            计算频谱，并计算带内功率。
            </summary>
            <param name="data"></param>
            <param name="spectrum"></param>
            <param name="powerInBand"></param>
        </member>
        <member name="M:JXI.RF.DSP.Spectrum.EasyComplexSpectrum.GetPowerSpectrum(System.Numerics.Complex[],System.Single[])">
            <summary>
            计算频谱。
            </summary>
            <param name="data"></param>
            <param name="spectrum"></param>
        </member>
        <member name="M:JXI.RF.DSP.Spectrum.EasyComplexSpectrum.MeasureOccupiedBandwidth(System.Single[],System.Double)">
            <summary>
            以x%功率方法计算占用带宽。
            </summary>
            <param name="spectrum"></param>
            <param name="percent"></param>
            <returns></returns>
        </member>
        <member name="M:JXI.RF.DSP.Spectrum.EasyComplexSpectrum.MeasureOccupiedBandwidthXdb(System.Single[],System.Double)">
            <summary>
            以x-dB方法测量占用带宽。
            </summary>
            <param name="spectrum"></param>
            <param name="xdbValue"></param>
            <returns></returns>
        </member>
        <member name="M:JXI.RF.DSP.Spectrum.EasyComplexSpectrum.MeasurePower(System.Double,System.Double)">
            <summary>
            测量指定频率处指定带宽的功率。
            </summary>
            <param name="centerFrequency"></param>
            <param name="bandwidth"></param>
            <returns></returns>
        </member>
        <member name="M:JXI.RF.DSP.Spectrum.EasyComplexSpectrum.Reset">
            <summary>
            重置频谱平均。
            </summary>
        </member>
        <member name="T:JXI.RF.DSP.Spectrum.SpectralLinesType">
            <summary>
            设定输出频谱线数的方式。
            </summary>
        </member>
        <member name="F:JXI.RF.DSP.Spectrum.SpectralLinesType.ByRbw">
            <summary>
            指定频谱分辨率（Resolution Bandwidth），可获取实际的频谱线数。
            </summary>
        </member>
        <member name="F:JXI.RF.DSP.Spectrum.SpectralLinesType.BySpectralLines">
            <summary>
            指定频谱线数（Number Of Spectral Lines），可获取实际的频谱分辨率（Resolution Bandwidth）。
            </summary>
        </member>
        <member name="T:JXI.RF.DSP.Spectrum.SpectralInformation">
            <summary>
            频谱的数据信息。
            </summary>
        </member>
        <member name="P:JXI.RF.DSP.Spectrum.SpectralInformation.FreqStart">
            <summary>
            频谱的起始频率，即第一根谱线对应频率值。
            </summary>
        </member>
        <member name="P:JXI.RF.DSP.Spectrum.SpectralInformation.FreqDelta">
            <summary>
            频谱的频率步进，即两根谱线之间的频率间隔。
            </summary>
        </member>
    </members>
</doc>
